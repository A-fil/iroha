machine:
  pre:
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
  services:
    - docker
  environment:
    IROHA_HOME: $(pwd)/iroha
    PATH: $PATH:/opt/cmake-3.5.2-Linux-x86_64/bin
    JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/
  java:
      version: 'oraclejdk8'

dependencies:
  cache_directories:
    # to cache external dependencies
    - ~/iroha/external
    # to cache docker images
    - ~/docker 
  override:
    - sudo curl -L "https://github.com/docker/compose/releases/download/1.8.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - sudo chmod +x /usr/local/bin/docker-compose
    # one way to cache iroha-dev container is to save it to tar image. 2 mins vs 10 mins without caching.
    - if [[ -e ~/docker/iroha-dev.tar ]]; then docker load -i ~/docker/iroha-dev.tar; else docker build --rm=false -t hyperledger/iroha-dev ${IROHA_HOME}/docker/dev; fi
    # build iroha. Result of this instruction is ${IROHA_HOME}/docker/build/iroha.tar
    - >
      docker run -i \
        -v ${IROHA_HOME}/docker/build:/build \
        -v ${IROHA_HOME}:/opt/iroha \
        hyperledger/iroha-dev \
        sh <<< "cd /opt/iroha/docker/dev/scripts; ./build-iroha.sh Release || exit 2; ./mktar-iroha.sh || exit 3; cp /tmp/iroha.tar /build/iroha.tar || exit 4"
    # build iroha-docker image
    - docker build --rm=false -t hyperledger/iroha-docker ${IROHA_HOME}/docker/build
    # cache iroha-dev image. takes 30 sec to save into file
    - mkdir -p ~/docker; docker save hyperledger/iroha-dev > ~/docker/iroha-dev.tar


test:
  pre:
    # TESTS: 
    # first, run ctest inside a container
    - docker run -p 1204:1204 hyperledger/iroha-docker /test.sh 
    # then, run iroha with dummy config (1 node) and print its output to stdout
    - export ID=$(docker run -it -d -p 1204:1204 hyperledger/iroha-docker /run.sh); echo "ID=$ID" >> ~/.bashrc
    # put new tests below
    - curl -X POST http://127.0.0.1:1204/account/register -d '{"publicKey":"WdvM/DPabapmtA7ISbTYPywbHxk8gWu2221LzmcmAgw=","alias":"yonezu","timestamp":1482053586}'
    # docker-peer-service TEST (add peer)
    - docker network create --subnet=172.20.0.0/16 iroha-network
    - >
      docker run -dit \
        --net=iroha-network \
        --ip=172.20.0.2 \
        --name iroha1 \
        -v $IROHA_HOME/config/sumeragi1.json:/usr/local/iroha/config/sumeragi.json \
        hyperledger/iroha-docker
    - >
      docker run -dit \
        --net=iroha-network \
        --ip=172.20.0.3 \
        --name iroha2 \
        -v $IROHA_HOME/config/sumeragi2.json:/usr/local/iroha/config/sumeragi.json \
        hyperledger/iroha-docker
    # docker exec -it iroha1 sh -c '/usr/local/iroha/bin/issue_transaction add peer yUAFTYNh6qkhBMiNgNdg45Wk/XHOGYanuIroY9skfPQ= 172.20.0.3 1.0 true'
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' iroha1)" -- /bin/sh -c '/usr/local/iroha/bin/issue_transaction add peer yUAFTYNh6qkhBMiNgNdg45Wk/XHOGYanuIroY9skfPQ= 172.20.0.3 1.0 true'

  post:
    # iroha1 logs
    - docker logs iroha1
    # iroha2 logs
    - docker logs iroha2
    # iroha-main logs
    - docker logs $ID
    # if node is alive, then iroha-main still works, otherwise test is failed
    - (docker kill $ID && echo "Container worked and now killed. OK") || (echo "Container died. FAIL." && exit 1)

deployment:
  hub:
    branch: master
    commands:
      # makes docker login and docker push $1
      - ${IROHA_HOME}/deploy.sh hyperledger/iroha-docker

    branch: develop
    commands:
      # makes docker login and docker push $1
      - ${IROHA_HOME}/deploy.sh hyperledger/iroha-docker-develop
 

